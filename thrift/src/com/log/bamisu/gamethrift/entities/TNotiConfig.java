/**
 * Autogenerated by Thrift Compiler (0.11.0)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
package com.bamisu.log.gamethrift.entities;

@SuppressWarnings({"cast", "rawtypes", "serial", "unchecked", "unused"})
@javax.annotation.Generated(value = "Autogenerated by Thrift Compiler (0.11.0)", date = "2018-08-10")
public class TNotiConfig implements org.apache.thrift.TBase<TNotiConfig, TNotiConfig._Fields>, java.io.Serializable, Cloneable, Comparable<TNotiConfig> {
  private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("TNotiConfig");

  private static final org.apache.thrift.protocol.TField ID_FIELD_DESC = new org.apache.thrift.protocol.TField("id", org.apache.thrift.protocol.TType.I32, (short)1);
  private static final org.apache.thrift.protocol.TField GAME_ID_FIELD_DESC = new org.apache.thrift.protocol.TField("gameId", org.apache.thrift.protocol.TType.I32, (short)2);
  private static final org.apache.thrift.protocol.TField START_TIME_FIELD_DESC = new org.apache.thrift.protocol.TField("startTime", org.apache.thrift.protocol.TType.STRING, (short)3);
  private static final org.apache.thrift.protocol.TField END_TIME_FIELD_DESC = new org.apache.thrift.protocol.TField("endTime", org.apache.thrift.protocol.TType.STRING, (short)4);
  private static final org.apache.thrift.protocol.TField RATE_FIELD_DESC = new org.apache.thrift.protocol.TField("rate", org.apache.thrift.protocol.TType.I32, (short)5);
  private static final org.apache.thrift.protocol.TField BOT_IDS_FIELD_DESC = new org.apache.thrift.protocol.TField("botIds", org.apache.thrift.protocol.TType.STRING, (short)6);
  private static final org.apache.thrift.protocol.TField BETS_FIELD_DESC = new org.apache.thrift.protocol.TField("bets", org.apache.thrift.protocol.TType.STRING, (short)7);

  private static final org.apache.thrift.scheme.SchemeFactory STANDARD_SCHEME_FACTORY = new TNotiConfigStandardSchemeFactory();
  private static final org.apache.thrift.scheme.SchemeFactory TUPLE_SCHEME_FACTORY = new TNotiConfigTupleSchemeFactory();

  public int id; // required
  public int gameId; // required
  public String startTime; // required
  public String endTime; // required
  public int rate; // required
  public String botIds; // required
  public String bets; // required

  /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
  public enum _Fields implements org.apache.thrift.TFieldIdEnum {
    ID((short)1, "id"),
    GAME_ID((short)2, "gameId"),
    START_TIME((short)3, "startTime"),
    END_TIME((short)4, "endTime"),
    RATE((short)5, "rate"),
    BOT_IDS((short)6, "botIds"),
    BETS((short)7, "bets");

    private static final java.util.Map<String, _Fields> byName = new java.util.HashMap<String, _Fields>();

    static {
      for (_Fields field : java.util.EnumSet.allOf(_Fields.class)) {
        byName.put(field.getFieldName(), field);
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, or null if its not found.
     */
    public static _Fields findByThriftId(int fieldId) {
      switch(fieldId) {
        case 1: // ID
          return ID;
        case 2: // GAME_ID
          return GAME_ID;
        case 3: // START_TIME
          return START_TIME;
        case 4: // END_TIME
          return END_TIME;
        case 5: // RATE
          return RATE;
        case 6: // BOT_IDS
          return BOT_IDS;
        case 7: // BETS
          return BETS;
        default:
          return null;
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, throwing an exception
     * if it is not found.
     */
    public static _Fields findByThriftIdOrThrow(int fieldId) {
      _Fields fields = findByThriftId(fieldId);
      if (fields == null) throw new IllegalArgumentException("Field " + fieldId + " doesn't exist!");
      return fields;
    }

    /**
     * Find the _Fields constant that matches name, or null if its not found.
     */
    public static _Fields findByName(String name) {
      return byName.get(name);
    }

    private final short _thriftId;
    private final String _fieldName;

    _Fields(short thriftId, String fieldName) {
      _thriftId = thriftId;
      _fieldName = fieldName;
    }

    public short getThriftFieldId() {
      return _thriftId;
    }

    public String getFieldName() {
      return _fieldName;
    }
  }

  // isset id assignments
  private static final int __ID_ISSET_ID = 0;
  private static final int __GAMEID_ISSET_ID = 1;
  private static final int __RATE_ISSET_ID = 2;
  private byte __isset_bitfield = 0;
  public static final java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
  static {
    java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new java.util.EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
    tmpMap.put(_Fields.ID, new org.apache.thrift.meta_data.FieldMetaData("id", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32        , "int")));
    tmpMap.put(_Fields.GAME_ID, new org.apache.thrift.meta_data.FieldMetaData("gameId", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32        , "int")));
    tmpMap.put(_Fields.START_TIME, new org.apache.thrift.meta_data.FieldMetaData("startTime", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.END_TIME, new org.apache.thrift.meta_data.FieldMetaData("endTime", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.RATE, new org.apache.thrift.meta_data.FieldMetaData("rate", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32        , "int")));
    tmpMap.put(_Fields.BOT_IDS, new org.apache.thrift.meta_data.FieldMetaData("botIds", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.BETS, new org.apache.thrift.meta_data.FieldMetaData("bets", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    metaDataMap = java.util.Collections.unmodifiableMap(tmpMap);
    org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(TNotiConfig.class, metaDataMap);
  }

  public TNotiConfig() {
  }

  public TNotiConfig(
    int id,
    int gameId,
    String startTime,
    String endTime,
    int rate,
    String botIds,
    String bets)
  {
    this();
    this.id = id;
    setIdIsSet(true);
    this.gameId = gameId;
    setGameIdIsSet(true);
    this.startTime = startTime;
    this.endTime = endTime;
    this.rate = rate;
    setRateIsSet(true);
    this.botIds = botIds;
    this.bets = bets;
  }

  /**
   * Performs a deep copy on <i>other</i>.
   */
  public TNotiConfig(TNotiConfig other) {
    __isset_bitfield = other.__isset_bitfield;
    this.id = other.id;
    this.gameId = other.gameId;
    if (other.isSetStartTime()) {
      this.startTime = other.startTime;
    }
    if (other.isSetEndTime()) {
      this.endTime = other.endTime;
    }
    this.rate = other.rate;
    if (other.isSetBotIds()) {
      this.botIds = other.botIds;
    }
    if (other.isSetBets()) {
      this.bets = other.bets;
    }
  }

  public TNotiConfig deepCopy() {
    return new TNotiConfig(this);
  }

  @Override
  public void clear() {
    setIdIsSet(false);
    this.id = 0;
    setGameIdIsSet(false);
    this.gameId = 0;
    this.startTime = null;
    this.endTime = null;
    setRateIsSet(false);
    this.rate = 0;
    this.botIds = null;
    this.bets = null;
  }

  public int getId() {
    return this.id;
  }

  public TNotiConfig setId(int id) {
    this.id = id;
    setIdIsSet(true);
    return this;
  }

  public void unsetId() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __ID_ISSET_ID);
  }

  /** Returns true if field id is set (has been assigned a value) and false otherwise */
  public boolean isSetId() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __ID_ISSET_ID);
  }

  public void setIdIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __ID_ISSET_ID, value);
  }

  public int getGameId() {
    return this.gameId;
  }

  public TNotiConfig setGameId(int gameId) {
    this.gameId = gameId;
    setGameIdIsSet(true);
    return this;
  }

  public void unsetGameId() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __GAMEID_ISSET_ID);
  }

  /** Returns true if field gameId is set (has been assigned a value) and false otherwise */
  public boolean isSetGameId() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __GAMEID_ISSET_ID);
  }

  public void setGameIdIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __GAMEID_ISSET_ID, value);
  }

  public String getStartTime() {
    return this.startTime;
  }

  public TNotiConfig setStartTime(String startTime) {
    this.startTime = startTime;
    return this;
  }

  public void unsetStartTime() {
    this.startTime = null;
  }

  /** Returns true if field startTime is set (has been assigned a value) and false otherwise */
  public boolean isSetStartTime() {
    return this.startTime != null;
  }

  public void setStartTimeIsSet(boolean value) {
    if (!value) {
      this.startTime = null;
    }
  }

  public String getEndTime() {
    return this.endTime;
  }

  public TNotiConfig setEndTime(String endTime) {
    this.endTime = endTime;
    return this;
  }

  public void unsetEndTime() {
    this.endTime = null;
  }

  /** Returns true if field endTime is set (has been assigned a value) and false otherwise */
  public boolean isSetEndTime() {
    return this.endTime != null;
  }

  public void setEndTimeIsSet(boolean value) {
    if (!value) {
      this.endTime = null;
    }
  }

  public int getRate() {
    return this.rate;
  }

  public TNotiConfig setRate(int rate) {
    this.rate = rate;
    setRateIsSet(true);
    return this;
  }

  public void unsetRate() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __RATE_ISSET_ID);
  }

  /** Returns true if field rate is set (has been assigned a value) and false otherwise */
  public boolean isSetRate() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __RATE_ISSET_ID);
  }

  public void setRateIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __RATE_ISSET_ID, value);
  }

  public String getBotIds() {
    return this.botIds;
  }

  public TNotiConfig setBotIds(String botIds) {
    this.botIds = botIds;
    return this;
  }

  public void unsetBotIds() {
    this.botIds = null;
  }

  /** Returns true if field botIds is set (has been assigned a value) and false otherwise */
  public boolean isSetBotIds() {
    return this.botIds != null;
  }

  public void setBotIdsIsSet(boolean value) {
    if (!value) {
      this.botIds = null;
    }
  }

  public String getBets() {
    return this.bets;
  }

  public TNotiConfig setBets(String bets) {
    this.bets = bets;
    return this;
  }

  public void unsetBets() {
    this.bets = null;
  }

  /** Returns true if field bets is set (has been assigned a value) and false otherwise */
  public boolean isSetBets() {
    return this.bets != null;
  }

  public void setBetsIsSet(boolean value) {
    if (!value) {
      this.bets = null;
    }
  }

  public void setFieldValue(_Fields field, Object value) {
    switch (field) {
    case ID:
      if (value == null) {
        unsetId();
      } else {
        setId((Integer)value);
      }
      break;

    case GAME_ID:
      if (value == null) {
        unsetGameId();
      } else {
        setGameId((Integer)value);
      }
      break;

    case START_TIME:
      if (value == null) {
        unsetStartTime();
      } else {
        setStartTime((String)value);
      }
      break;

    case END_TIME:
      if (value == null) {
        unsetEndTime();
      } else {
        setEndTime((String)value);
      }
      break;

    case RATE:
      if (value == null) {
        unsetRate();
      } else {
        setRate((Integer)value);
      }
      break;

    case BOT_IDS:
      if (value == null) {
        unsetBotIds();
      } else {
        setBotIds((String)value);
      }
      break;

    case BETS:
      if (value == null) {
        unsetBets();
      } else {
        setBets((String)value);
      }
      break;

    }
  }

  public Object getFieldValue(_Fields field) {
    switch (field) {
    case ID:
      return getId();

    case GAME_ID:
      return getGameId();

    case START_TIME:
      return getStartTime();

    case END_TIME:
      return getEndTime();

    case RATE:
      return getRate();

    case BOT_IDS:
      return getBotIds();

    case BETS:
      return getBets();

    }
    throw new IllegalStateException();
  }

  /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
  public boolean isSet(_Fields field) {
    if (field == null) {
      throw new IllegalArgumentException();
    }

    switch (field) {
    case ID:
      return isSetId();
    case GAME_ID:
      return isSetGameId();
    case START_TIME:
      return isSetStartTime();
    case END_TIME:
      return isSetEndTime();
    case RATE:
      return isSetRate();
    case BOT_IDS:
      return isSetBotIds();
    case BETS:
      return isSetBets();
    }
    throw new IllegalStateException();
  }

  @Override
  public boolean equals(Object that) {
    if (that == null)
      return false;
    if (that instanceof TNotiConfig)
      return this.equals((TNotiConfig)that);
    return false;
  }

  public boolean equals(TNotiConfig that) {
    if (that == null)
      return false;
    if (this == that)
      return true;

    boolean this_present_id = true;
    boolean that_present_id = true;
    if (this_present_id || that_present_id) {
      if (!(this_present_id && that_present_id))
        return false;
      if (this.id != that.id)
        return false;
    }

    boolean this_present_gameId = true;
    boolean that_present_gameId = true;
    if (this_present_gameId || that_present_gameId) {
      if (!(this_present_gameId && that_present_gameId))
        return false;
      if (this.gameId != that.gameId)
        return false;
    }

    boolean this_present_startTime = true && this.isSetStartTime();
    boolean that_present_startTime = true && that.isSetStartTime();
    if (this_present_startTime || that_present_startTime) {
      if (!(this_present_startTime && that_present_startTime))
        return false;
      if (!this.startTime.equals(that.startTime))
        return false;
    }

    boolean this_present_endTime = true && this.isSetEndTime();
    boolean that_present_endTime = true && that.isSetEndTime();
    if (this_present_endTime || that_present_endTime) {
      if (!(this_present_endTime && that_present_endTime))
        return false;
      if (!this.endTime.equals(that.endTime))
        return false;
    }

    boolean this_present_rate = true;
    boolean that_present_rate = true;
    if (this_present_rate || that_present_rate) {
      if (!(this_present_rate && that_present_rate))
        return false;
      if (this.rate != that.rate)
        return false;
    }

    boolean this_present_botIds = true && this.isSetBotIds();
    boolean that_present_botIds = true && that.isSetBotIds();
    if (this_present_botIds || that_present_botIds) {
      if (!(this_present_botIds && that_present_botIds))
        return false;
      if (!this.botIds.equals(that.botIds))
        return false;
    }

    boolean this_present_bets = true && this.isSetBets();
    boolean that_present_bets = true && that.isSetBets();
    if (this_present_bets || that_present_bets) {
      if (!(this_present_bets && that_present_bets))
        return false;
      if (!this.bets.equals(that.bets))
        return false;
    }

    return true;
  }

  @Override
  public int hashCode() {
    int hashCode = 1;

    hashCode = hashCode * 8191 + id;

    hashCode = hashCode * 8191 + gameId;

    hashCode = hashCode * 8191 + ((isSetStartTime()) ? 131071 : 524287);
    if (isSetStartTime())
      hashCode = hashCode * 8191 + startTime.hashCode();

    hashCode = hashCode * 8191 + ((isSetEndTime()) ? 131071 : 524287);
    if (isSetEndTime())
      hashCode = hashCode * 8191 + endTime.hashCode();

    hashCode = hashCode * 8191 + rate;

    hashCode = hashCode * 8191 + ((isSetBotIds()) ? 131071 : 524287);
    if (isSetBotIds())
      hashCode = hashCode * 8191 + botIds.hashCode();

    hashCode = hashCode * 8191 + ((isSetBets()) ? 131071 : 524287);
    if (isSetBets())
      hashCode = hashCode * 8191 + bets.hashCode();

    return hashCode;
  }

  @Override
  public int compareTo(TNotiConfig other) {
    if (!getClass().equals(other.getClass())) {
      return getClass().getName().compareTo(other.getClass().getName());
    }

    int lastComparison = 0;

    lastComparison = Boolean.valueOf(isSetId()).compareTo(other.isSetId());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetId()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.id, other.id);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetGameId()).compareTo(other.isSetGameId());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetGameId()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.gameId, other.gameId);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetStartTime()).compareTo(other.isSetStartTime());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetStartTime()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.startTime, other.startTime);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetEndTime()).compareTo(other.isSetEndTime());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetEndTime()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.endTime, other.endTime);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetRate()).compareTo(other.isSetRate());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetRate()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.rate, other.rate);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetBotIds()).compareTo(other.isSetBotIds());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetBotIds()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.botIds, other.botIds);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetBets()).compareTo(other.isSetBets());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetBets()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.bets, other.bets);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    return 0;
  }

  public _Fields fieldForId(int fieldId) {
    return _Fields.findByThriftId(fieldId);
  }

  public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
    scheme(iprot).read(iprot, this);
  }

  public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
    scheme(oprot).write(oprot, this);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder("TNotiConfig(");
    boolean first = true;

    sb.append("id:");
    sb.append(this.id);
    first = false;
    if (!first) sb.append(", ");
    sb.append("gameId:");
    sb.append(this.gameId);
    first = false;
    if (!first) sb.append(", ");
    sb.append("startTime:");
    if (this.startTime == null) {
      sb.append("null");
    } else {
      sb.append(this.startTime);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("endTime:");
    if (this.endTime == null) {
      sb.append("null");
    } else {
      sb.append(this.endTime);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("rate:");
    sb.append(this.rate);
    first = false;
    if (!first) sb.append(", ");
    sb.append("botIds:");
    if (this.botIds == null) {
      sb.append("null");
    } else {
      sb.append(this.botIds);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("bets:");
    if (this.bets == null) {
      sb.append("null");
    } else {
      sb.append(this.bets);
    }
    first = false;
    sb.append(")");
    return sb.toString();
  }

  public void validate() throws org.apache.thrift.TException {
    // check for required fields
    // check for sub-struct validity
  }

  private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
    try {
      write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, ClassNotFoundException {
    try {
      // it doesn't seem like you should have to do this, but java serialization is wacky, and doesn't call the default constructor.
      __isset_bitfield = 0;
      read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private static class TNotiConfigStandardSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
    public TNotiConfigStandardScheme getScheme() {
      return new TNotiConfigStandardScheme();
    }
  }

  private static class TNotiConfigStandardScheme extends org.apache.thrift.scheme.StandardScheme<TNotiConfig> {

    public void read(org.apache.thrift.protocol.TProtocol iprot, TNotiConfig struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TField schemeField;
      iprot.readStructBegin();
      while (true)
      {
        schemeField = iprot.readFieldBegin();
        if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
          break;
        }
        switch (schemeField.id) {
          case 1: // ID
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.id = iprot.readI32();
              struct.setIdIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 2: // GAME_ID
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.gameId = iprot.readI32();
              struct.setGameIdIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 3: // START_TIME
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.startTime = iprot.readString();
              struct.setStartTimeIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 4: // END_TIME
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.endTime = iprot.readString();
              struct.setEndTimeIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 5: // RATE
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.rate = iprot.readI32();
              struct.setRateIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 6: // BOT_IDS
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.botIds = iprot.readString();
              struct.setBotIdsIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 7: // BETS
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.bets = iprot.readString();
              struct.setBetsIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          default:
            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
        }
        iprot.readFieldEnd();
      }
      iprot.readStructEnd();

      // check for required fields of primitive type, which can't be checked in the validate method
      struct.validate();
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot, TNotiConfig struct) throws org.apache.thrift.TException {
      struct.validate();

      oprot.writeStructBegin(STRUCT_DESC);
      oprot.writeFieldBegin(ID_FIELD_DESC);
      oprot.writeI32(struct.id);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(GAME_ID_FIELD_DESC);
      oprot.writeI32(struct.gameId);
      oprot.writeFieldEnd();
      if (struct.startTime != null) {
        oprot.writeFieldBegin(START_TIME_FIELD_DESC);
        oprot.writeString(struct.startTime);
        oprot.writeFieldEnd();
      }
      if (struct.endTime != null) {
        oprot.writeFieldBegin(END_TIME_FIELD_DESC);
        oprot.writeString(struct.endTime);
        oprot.writeFieldEnd();
      }
      oprot.writeFieldBegin(RATE_FIELD_DESC);
      oprot.writeI32(struct.rate);
      oprot.writeFieldEnd();
      if (struct.botIds != null) {
        oprot.writeFieldBegin(BOT_IDS_FIELD_DESC);
        oprot.writeString(struct.botIds);
        oprot.writeFieldEnd();
      }
      if (struct.bets != null) {
        oprot.writeFieldBegin(BETS_FIELD_DESC);
        oprot.writeString(struct.bets);
        oprot.writeFieldEnd();
      }
      oprot.writeFieldStop();
      oprot.writeStructEnd();
    }

  }

  private static class TNotiConfigTupleSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
    public TNotiConfigTupleScheme getScheme() {
      return new TNotiConfigTupleScheme();
    }
  }

  private static class TNotiConfigTupleScheme extends org.apache.thrift.scheme.TupleScheme<TNotiConfig> {

    @Override
    public void write(org.apache.thrift.protocol.TProtocol prot, TNotiConfig struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TTupleProtocol oprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
      java.util.BitSet optionals = new java.util.BitSet();
      if (struct.isSetId()) {
        optionals.set(0);
      }
      if (struct.isSetGameId()) {
        optionals.set(1);
      }
      if (struct.isSetStartTime()) {
        optionals.set(2);
      }
      if (struct.isSetEndTime()) {
        optionals.set(3);
      }
      if (struct.isSetRate()) {
        optionals.set(4);
      }
      if (struct.isSetBotIds()) {
        optionals.set(5);
      }
      if (struct.isSetBets()) {
        optionals.set(6);
      }
      oprot.writeBitSet(optionals, 7);
      if (struct.isSetId()) {
        oprot.writeI32(struct.id);
      }
      if (struct.isSetGameId()) {
        oprot.writeI32(struct.gameId);
      }
      if (struct.isSetStartTime()) {
        oprot.writeString(struct.startTime);
      }
      if (struct.isSetEndTime()) {
        oprot.writeString(struct.endTime);
      }
      if (struct.isSetRate()) {
        oprot.writeI32(struct.rate);
      }
      if (struct.isSetBotIds()) {
        oprot.writeString(struct.botIds);
      }
      if (struct.isSetBets()) {
        oprot.writeString(struct.bets);
      }
    }

    @Override
    public void read(org.apache.thrift.protocol.TProtocol prot, TNotiConfig struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TTupleProtocol iprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
      java.util.BitSet incoming = iprot.readBitSet(7);
      if (incoming.get(0)) {
        struct.id = iprot.readI32();
        struct.setIdIsSet(true);
      }
      if (incoming.get(1)) {
        struct.gameId = iprot.readI32();
        struct.setGameIdIsSet(true);
      }
      if (incoming.get(2)) {
        struct.startTime = iprot.readString();
        struct.setStartTimeIsSet(true);
      }
      if (incoming.get(3)) {
        struct.endTime = iprot.readString();
        struct.setEndTimeIsSet(true);
      }
      if (incoming.get(4)) {
        struct.rate = iprot.readI32();
        struct.setRateIsSet(true);
      }
      if (incoming.get(5)) {
        struct.botIds = iprot.readString();
        struct.setBotIdsIsSet(true);
      }
      if (incoming.get(6)) {
        struct.bets = iprot.readString();
        struct.setBetsIsSet(true);
      }
    }
  }

  private static <S extends org.apache.thrift.scheme.IScheme> S scheme(org.apache.thrift.protocol.TProtocol proto) {
    return (org.apache.thrift.scheme.StandardScheme.class.equals(proto.getScheme()) ? STANDARD_SCHEME_FACTORY : TUPLE_SCHEME_FACTORY).getScheme();
  }
}

