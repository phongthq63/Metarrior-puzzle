/**
 * Autogenerated by Thrift Compiler (0.11.0)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
package com.bamisu.log.gamethrift.entities;

@SuppressWarnings({"cast", "rawtypes", "serial", "unchecked", "unused"})
/**
 * uid	    long	id
 * us	    string	tên đăng nhập
 * dn	    string	tên hiển thị
 * em	    string
 * ph	    string
 * rt	    int	    thời gian đăng ký
 * ll	    int	    thời gian đăng nhập gần nhất
 * chip	long
 * xu	    long
 * item	long	tổng tiền vật phẩm
 * im	    long	tổng tiền nạp
 * om	    long	tổng tiền đổi
 */
@javax.annotation.Generated(value = "Autogenerated by Thrift Compiler (0.11.0)", date = "2019-08-22")
public class TUserInfo implements org.apache.thrift.TBase<TUserInfo, TUserInfo._Fields>, java.io.Serializable, Cloneable, Comparable<TUserInfo> {
  private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("TUserInfo");

  private static final org.apache.thrift.protocol.TField UID_FIELD_DESC = new org.apache.thrift.protocol.TField("uid", org.apache.thrift.protocol.TType.STRING, (short)1);
  private static final org.apache.thrift.protocol.TField USER_NAME_FIELD_DESC = new org.apache.thrift.protocol.TField("userName", org.apache.thrift.protocol.TType.STRING, (short)2);
  private static final org.apache.thrift.protocol.TField DISPLAY_NAME_FIELD_DESC = new org.apache.thrift.protocol.TField("displayName", org.apache.thrift.protocol.TType.STRING, (short)3);
  private static final org.apache.thrift.protocol.TField EMAIL_FIELD_DESC = new org.apache.thrift.protocol.TField("email", org.apache.thrift.protocol.TType.STRING, (short)4);
  private static final org.apache.thrift.protocol.TField PHONE_FIELD_DESC = new org.apache.thrift.protocol.TField("phone", org.apache.thrift.protocol.TType.STRING, (short)5);
  private static final org.apache.thrift.protocol.TField REGISTER_TIME_FIELD_DESC = new org.apache.thrift.protocol.TField("registerTime", org.apache.thrift.protocol.TType.I32, (short)6);
  private static final org.apache.thrift.protocol.TField LOGIN_TIME_FIELD_DESC = new org.apache.thrift.protocol.TField("loginTime", org.apache.thrift.protocol.TType.I32, (short)7);
  private static final org.apache.thrift.protocol.TField CHIP_FIELD_DESC = new org.apache.thrift.protocol.TField("chip", org.apache.thrift.protocol.TType.I64, (short)8);
  private static final org.apache.thrift.protocol.TField XU_FIELD_DESC = new org.apache.thrift.protocol.TField("xu", org.apache.thrift.protocol.TType.I64, (short)9);
  private static final org.apache.thrift.protocol.TField ITEM_FIELD_DESC = new org.apache.thrift.protocol.TField("item", org.apache.thrift.protocol.TType.LIST, (short)10);
  private static final org.apache.thrift.protocol.TField AVATAR_URL_FIELD_DESC = new org.apache.thrift.protocol.TField("avatarURL", org.apache.thrift.protocol.TType.STRING, (short)11);
  private static final org.apache.thrift.protocol.TField BANK_MONEY_FIELD_DESC = new org.apache.thrift.protocol.TField("bankMoney", org.apache.thrift.protocol.TType.I64, (short)12);
  private static final org.apache.thrift.protocol.TField GOLD_FIELD_DESC = new org.apache.thrift.protocol.TField("gold", org.apache.thrift.protocol.TType.I64, (short)13);
  private static final org.apache.thrift.protocol.TField DIAMOND_FIELD_DESC = new org.apache.thrift.protocol.TField("diamond", org.apache.thrift.protocol.TType.I64, (short)14);
  private static final org.apache.thrift.protocol.TField TOKEN_FIELD_DESC = new org.apache.thrift.protocol.TField("token", org.apache.thrift.protocol.TType.I64, (short)15);
  private static final org.apache.thrift.protocol.TField VOUCHER_PHOENIX_FIELD_DESC = new org.apache.thrift.protocol.TField("voucherPhoenix", org.apache.thrift.protocol.TType.I64, (short)17);
  private static final org.apache.thrift.protocol.TField VOUCHER_DRAGON_FIELD_DESC = new org.apache.thrift.protocol.TField("voucherDragon", org.apache.thrift.protocol.TType.I64, (short)18);

  private static final org.apache.thrift.scheme.SchemeFactory STANDARD_SCHEME_FACTORY = new TUserInfoStandardSchemeFactory();
  private static final org.apache.thrift.scheme.SchemeFactory TUPLE_SCHEME_FACTORY = new TUserInfoTupleSchemeFactory();

  public String uid; // required
  public String userName; // required
  public String displayName; // required
  public String email; // required
  public String phone; // required
  public int registerTime; // required
  public int loginTime; // required
  public long chip; // required
  public long xu; // required
  public java.util.List<Integer> item; // required
  public String avatarURL; // required
  public long bankMoney; // required
  public long gold; // required
  public long diamond; // required
  public long token; // required
  public long voucherPhoenix; // required
  public long voucherDragon; // required

  /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
  public enum _Fields implements org.apache.thrift.TFieldIdEnum {
    UID((short)1, "uid"),
    USER_NAME((short)2, "userName"),
    DISPLAY_NAME((short)3, "displayName"),
    EMAIL((short)4, "email"),
    PHONE((short)5, "phone"),
    REGISTER_TIME((short)6, "registerTime"),
    LOGIN_TIME((short)7, "loginTime"),
    CHIP((short)8, "chip"),
    XU((short)9, "xu"),
    ITEM((short)10, "item"),
    AVATAR_URL((short)11, "avatarURL"),
    BANK_MONEY((short)12, "bankMoney"),
    GOLD((short)13, "gold"),
    DIAMOND((short)14, "diamond"),
    TOKEN((short)15, "token"),
    VOUCHER_PHOENIX((short)17, "voucherPhoenix"),
    VOUCHER_DRAGON((short)18, "voucherDragon");

    private static final java.util.Map<String, _Fields> byName = new java.util.HashMap<String, _Fields>();

    static {
      for (_Fields field : java.util.EnumSet.allOf(_Fields.class)) {
        byName.put(field.getFieldName(), field);
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, or null if its not found.
     */
    public static _Fields findByThriftId(int fieldId) {
      switch(fieldId) {
        case 1: // UID
          return UID;
        case 2: // USER_NAME
          return USER_NAME;
        case 3: // DISPLAY_NAME
          return DISPLAY_NAME;
        case 4: // EMAIL
          return EMAIL;
        case 5: // PHONE
          return PHONE;
        case 6: // REGISTER_TIME
          return REGISTER_TIME;
        case 7: // LOGIN_TIME
          return LOGIN_TIME;
        case 8: // CHIP
          return CHIP;
        case 9: // XU
          return XU;
        case 10: // ITEM
          return ITEM;
        case 11: // AVATAR_URL
          return AVATAR_URL;
        case 12: // BANK_MONEY
          return BANK_MONEY;
        case 13: // GOLD
          return GOLD;
        case 14: // DIAMOND
          return DIAMOND;
        case 15: // TOKEN
          return TOKEN;
        case 17: // VOUCHER_PHOENIX
          return VOUCHER_PHOENIX;
        case 18: // VOUCHER_DRAGON
          return VOUCHER_DRAGON;
        default:
          return null;
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, throwing an exception
     * if it is not found.
     */
    public static _Fields findByThriftIdOrThrow(int fieldId) {
      _Fields fields = findByThriftId(fieldId);
      if (fields == null) throw new IllegalArgumentException("Field " + fieldId + " doesn't exist!");
      return fields;
    }

    /**
     * Find the _Fields constant that matches name, or null if its not found.
     */
    public static _Fields findByName(String name) {
      return byName.get(name);
    }

    private final short _thriftId;
    private final String _fieldName;

    _Fields(short thriftId, String fieldName) {
      _thriftId = thriftId;
      _fieldName = fieldName;
    }

    public short getThriftFieldId() {
      return _thriftId;
    }

    public String getFieldName() {
      return _fieldName;
    }
  }

  // isset id assignments
  private static final int __REGISTERTIME_ISSET_ID = 0;
  private static final int __LOGINTIME_ISSET_ID = 1;
  private static final int __CHIP_ISSET_ID = 2;
  private static final int __XU_ISSET_ID = 3;
  private static final int __BANKMONEY_ISSET_ID = 4;
  private static final int __GOLD_ISSET_ID = 5;
  private static final int __DIAMOND_ISSET_ID = 6;
  private static final int __TOKEN_ISSET_ID = 7;
  private static final int __VOUCHERPHOENIX_ISSET_ID = 8;
  private static final int __VOUCHERDRAGON_ISSET_ID = 9;
  private short __isset_bitfield = 0;
  public static final java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
  static {
    java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new java.util.EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
    tmpMap.put(_Fields.UID, new org.apache.thrift.meta_data.FieldMetaData("uid", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.USER_NAME, new org.apache.thrift.meta_data.FieldMetaData("userName", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.DISPLAY_NAME, new org.apache.thrift.meta_data.FieldMetaData("displayName", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.EMAIL, new org.apache.thrift.meta_data.FieldMetaData("email", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.PHONE, new org.apache.thrift.meta_data.FieldMetaData("phone", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.REGISTER_TIME, new org.apache.thrift.meta_data.FieldMetaData("registerTime", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32        , "int")));
    tmpMap.put(_Fields.LOGIN_TIME, new org.apache.thrift.meta_data.FieldMetaData("loginTime", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32        , "int")));
    tmpMap.put(_Fields.CHIP, new org.apache.thrift.meta_data.FieldMetaData("chip", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I64        , "long")));
    tmpMap.put(_Fields.XU, new org.apache.thrift.meta_data.FieldMetaData("xu", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I64        , "long")));
    tmpMap.put(_Fields.ITEM, new org.apache.thrift.meta_data.FieldMetaData("item", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.ListMetaData(org.apache.thrift.protocol.TType.LIST, 
            new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32            , "int"))));
    tmpMap.put(_Fields.AVATAR_URL, new org.apache.thrift.meta_data.FieldMetaData("avatarURL", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.BANK_MONEY, new org.apache.thrift.meta_data.FieldMetaData("bankMoney", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I64        , "long")));
    tmpMap.put(_Fields.GOLD, new org.apache.thrift.meta_data.FieldMetaData("gold", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I64        , "long")));
    tmpMap.put(_Fields.DIAMOND, new org.apache.thrift.meta_data.FieldMetaData("diamond", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I64        , "long")));
    tmpMap.put(_Fields.TOKEN, new org.apache.thrift.meta_data.FieldMetaData("token", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I64        , "long")));
    tmpMap.put(_Fields.VOUCHER_PHOENIX, new org.apache.thrift.meta_data.FieldMetaData("voucherPhoenix", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I64        , "long")));
    tmpMap.put(_Fields.VOUCHER_DRAGON, new org.apache.thrift.meta_data.FieldMetaData("voucherDragon", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I64        , "long")));
    metaDataMap = java.util.Collections.unmodifiableMap(tmpMap);
    org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(TUserInfo.class, metaDataMap);
  }

  public TUserInfo() {
  }

  public TUserInfo(
    String uid,
    String userName,
    String displayName,
    String email,
    String phone,
    int registerTime,
    int loginTime,
    long chip,
    long xu,
    java.util.List<Integer> item,
    String avatarURL,
    long bankMoney,
    long gold,
    long diamond,
    long token,
    long voucherPhoenix,
    long voucherDragon)
  {
    this();
    this.uid = uid;
    this.userName = userName;
    this.displayName = displayName;
    this.email = email;
    this.phone = phone;
    this.registerTime = registerTime;
    setRegisterTimeIsSet(true);
    this.loginTime = loginTime;
    setLoginTimeIsSet(true);
    this.chip = chip;
    setChipIsSet(true);
    this.xu = xu;
    setXuIsSet(true);
    this.item = item;
    this.avatarURL = avatarURL;
    this.bankMoney = bankMoney;
    setBankMoneyIsSet(true);
    this.gold = gold;
    setGoldIsSet(true);
    this.diamond = diamond;
    setDiamondIsSet(true);
    this.token = token;
    setTokenIsSet(true);
    this.voucherPhoenix = voucherPhoenix;
    setVoucherPhoenixIsSet(true);
    this.voucherDragon = voucherDragon;
    setVoucherDragonIsSet(true);
  }

  /**
   * Performs a deep copy on <i>other</i>.
   */
  public TUserInfo(TUserInfo other) {
    __isset_bitfield = other.__isset_bitfield;
    if (other.isSetUid()) {
      this.uid = other.uid;
    }
    if (other.isSetUserName()) {
      this.userName = other.userName;
    }
    if (other.isSetDisplayName()) {
      this.displayName = other.displayName;
    }
    if (other.isSetEmail()) {
      this.email = other.email;
    }
    if (other.isSetPhone()) {
      this.phone = other.phone;
    }
    this.registerTime = other.registerTime;
    this.loginTime = other.loginTime;
    this.chip = other.chip;
    this.xu = other.xu;
    if (other.isSetItem()) {
      java.util.List<Integer> __this__item = new java.util.ArrayList<Integer>(other.item.size());
      for (Integer other_element : other.item) {
        __this__item.add(other_element);
      }
      this.item = __this__item;
    }
    if (other.isSetAvatarURL()) {
      this.avatarURL = other.avatarURL;
    }
    this.bankMoney = other.bankMoney;
    this.gold = other.gold;
    this.diamond = other.diamond;
    this.token = other.token;
    this.voucherPhoenix = other.voucherPhoenix;
    this.voucherDragon = other.voucherDragon;
  }

  public TUserInfo deepCopy() {
    return new TUserInfo(this);
  }

  @Override
  public void clear() {
    this.uid = null;
    this.userName = null;
    this.displayName = null;
    this.email = null;
    this.phone = null;
    setRegisterTimeIsSet(false);
    this.registerTime = 0;
    setLoginTimeIsSet(false);
    this.loginTime = 0;
    setChipIsSet(false);
    this.chip = 0;
    setXuIsSet(false);
    this.xu = 0;
    this.item = null;
    this.avatarURL = null;
    setBankMoneyIsSet(false);
    this.bankMoney = 0;
    setGoldIsSet(false);
    this.gold = 0;
    setDiamondIsSet(false);
    this.diamond = 0;
    setTokenIsSet(false);
    this.token = 0;
    setVoucherPhoenixIsSet(false);
    this.voucherPhoenix = 0;
    setVoucherDragonIsSet(false);
    this.voucherDragon = 0;
  }

  public String getUid() {
    return this.uid;
  }

  public TUserInfo setUid(String uid) {
    this.uid = uid;
    return this;
  }

  public void unsetUid() {
    this.uid = null;
  }

  /** Returns true if field uid is set (has been assigned a value) and false otherwise */
  public boolean isSetUid() {
    return this.uid != null;
  }

  public void setUidIsSet(boolean value) {
    if (!value) {
      this.uid = null;
    }
  }

  public String getUserName() {
    return this.userName;
  }

  public TUserInfo setUserName(String userName) {
    this.userName = userName;
    return this;
  }

  public void unsetUserName() {
    this.userName = null;
  }

  /** Returns true if field userName is set (has been assigned a value) and false otherwise */
  public boolean isSetUserName() {
    return this.userName != null;
  }

  public void setUserNameIsSet(boolean value) {
    if (!value) {
      this.userName = null;
    }
  }

  public String getDisplayName() {
    return this.displayName;
  }

  public TUserInfo setDisplayName(String displayName) {
    this.displayName = displayName;
    return this;
  }

  public void unsetDisplayName() {
    this.displayName = null;
  }

  /** Returns true if field displayName is set (has been assigned a value) and false otherwise */
  public boolean isSetDisplayName() {
    return this.displayName != null;
  }

  public void setDisplayNameIsSet(boolean value) {
    if (!value) {
      this.displayName = null;
    }
  }

  public String getEmail() {
    return this.email;
  }

  public TUserInfo setEmail(String email) {
    this.email = email;
    return this;
  }

  public void unsetEmail() {
    this.email = null;
  }

  /** Returns true if field email is set (has been assigned a value) and false otherwise */
  public boolean isSetEmail() {
    return this.email != null;
  }

  public void setEmailIsSet(boolean value) {
    if (!value) {
      this.email = null;
    }
  }

  public String getPhone() {
    return this.phone;
  }

  public TUserInfo setPhone(String phone) {
    this.phone = phone;
    return this;
  }

  public void unsetPhone() {
    this.phone = null;
  }

  /** Returns true if field phone is set (has been assigned a value) and false otherwise */
  public boolean isSetPhone() {
    return this.phone != null;
  }

  public void setPhoneIsSet(boolean value) {
    if (!value) {
      this.phone = null;
    }
  }

  public int getRegisterTime() {
    return this.registerTime;
  }

  public TUserInfo setRegisterTime(int registerTime) {
    this.registerTime = registerTime;
    setRegisterTimeIsSet(true);
    return this;
  }

  public void unsetRegisterTime() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __REGISTERTIME_ISSET_ID);
  }

  /** Returns true if field registerTime is set (has been assigned a value) and false otherwise */
  public boolean isSetRegisterTime() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __REGISTERTIME_ISSET_ID);
  }

  public void setRegisterTimeIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __REGISTERTIME_ISSET_ID, value);
  }

  public int getLoginTime() {
    return this.loginTime;
  }

  public TUserInfo setLoginTime(int loginTime) {
    this.loginTime = loginTime;
    setLoginTimeIsSet(true);
    return this;
  }

  public void unsetLoginTime() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __LOGINTIME_ISSET_ID);
  }

  /** Returns true if field loginTime is set (has been assigned a value) and false otherwise */
  public boolean isSetLoginTime() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __LOGINTIME_ISSET_ID);
  }

  public void setLoginTimeIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __LOGINTIME_ISSET_ID, value);
  }

  public long getChip() {
    return this.chip;
  }

  public TUserInfo setChip(long chip) {
    this.chip = chip;
    setChipIsSet(true);
    return this;
  }

  public void unsetChip() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __CHIP_ISSET_ID);
  }

  /** Returns true if field chip is set (has been assigned a value) and false otherwise */
  public boolean isSetChip() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __CHIP_ISSET_ID);
  }

  public void setChipIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __CHIP_ISSET_ID, value);
  }

  public long getXu() {
    return this.xu;
  }

  public TUserInfo setXu(long xu) {
    this.xu = xu;
    setXuIsSet(true);
    return this;
  }

  public void unsetXu() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __XU_ISSET_ID);
  }

  /** Returns true if field xu is set (has been assigned a value) and false otherwise */
  public boolean isSetXu() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __XU_ISSET_ID);
  }

  public void setXuIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __XU_ISSET_ID, value);
  }

  public int getItemSize() {
    return (this.item == null) ? 0 : this.item.size();
  }

  public java.util.Iterator<Integer> getItemIterator() {
    return (this.item == null) ? null : this.item.iterator();
  }

  public void addToItem(int elem) {
    if (this.item == null) {
      this.item = new java.util.ArrayList<Integer>();
    }
    this.item.add(elem);
  }

  public java.util.List<Integer> getItem() {
    return this.item;
  }

  public TUserInfo setItem(java.util.List<Integer> item) {
    this.item = item;
    return this;
  }

  public void unsetItem() {
    this.item = null;
  }

  /** Returns true if field item is set (has been assigned a value) and false otherwise */
  public boolean isSetItem() {
    return this.item != null;
  }

  public void setItemIsSet(boolean value) {
    if (!value) {
      this.item = null;
    }
  }

  public String getAvatarURL() {
    return this.avatarURL;
  }

  public TUserInfo setAvatarURL(String avatarURL) {
    this.avatarURL = avatarURL;
    return this;
  }

  public void unsetAvatarURL() {
    this.avatarURL = null;
  }

  /** Returns true if field avatarURL is set (has been assigned a value) and false otherwise */
  public boolean isSetAvatarURL() {
    return this.avatarURL != null;
  }

  public void setAvatarURLIsSet(boolean value) {
    if (!value) {
      this.avatarURL = null;
    }
  }

  public long getBankMoney() {
    return this.bankMoney;
  }

  public TUserInfo setBankMoney(long bankMoney) {
    this.bankMoney = bankMoney;
    setBankMoneyIsSet(true);
    return this;
  }

  public void unsetBankMoney() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __BANKMONEY_ISSET_ID);
  }

  /** Returns true if field bankMoney is set (has been assigned a value) and false otherwise */
  public boolean isSetBankMoney() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __BANKMONEY_ISSET_ID);
  }

  public void setBankMoneyIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __BANKMONEY_ISSET_ID, value);
  }

  public long getGold() {
    return this.gold;
  }

  public TUserInfo setGold(long gold) {
    this.gold = gold;
    setGoldIsSet(true);
    return this;
  }

  public void unsetGold() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __GOLD_ISSET_ID);
  }

  /** Returns true if field gold is set (has been assigned a value) and false otherwise */
  public boolean isSetGold() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __GOLD_ISSET_ID);
  }

  public void setGoldIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __GOLD_ISSET_ID, value);
  }

  public long getDiamond() {
    return this.diamond;
  }

  public TUserInfo setDiamond(long diamond) {
    this.diamond = diamond;
    setDiamondIsSet(true);
    return this;
  }

  public void unsetDiamond() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __DIAMOND_ISSET_ID);
  }

  /** Returns true if field diamond is set (has been assigned a value) and false otherwise */
  public boolean isSetDiamond() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __DIAMOND_ISSET_ID);
  }

  public void setDiamondIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __DIAMOND_ISSET_ID, value);
  }

  public long getToken() {
    return this.token;
  }

  public TUserInfo setToken(long token) {
    this.token = token;
    setTokenIsSet(true);
    return this;
  }

  public void unsetToken() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __TOKEN_ISSET_ID);
  }

  /** Returns true if field token is set (has been assigned a value) and false otherwise */
  public boolean isSetToken() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __TOKEN_ISSET_ID);
  }

  public void setTokenIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __TOKEN_ISSET_ID, value);
  }

  public long getVoucherPhoenix() {
    return this.voucherPhoenix;
  }

  public TUserInfo setVoucherPhoenix(long voucherPhoenix) {
    this.voucherPhoenix = voucherPhoenix;
    setVoucherPhoenixIsSet(true);
    return this;
  }

  public void unsetVoucherPhoenix() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __VOUCHERPHOENIX_ISSET_ID);
  }

  /** Returns true if field voucherPhoenix is set (has been assigned a value) and false otherwise */
  public boolean isSetVoucherPhoenix() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __VOUCHERPHOENIX_ISSET_ID);
  }

  public void setVoucherPhoenixIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __VOUCHERPHOENIX_ISSET_ID, value);
  }

  public long getVoucherDragon() {
    return this.voucherDragon;
  }

  public TUserInfo setVoucherDragon(long voucherDragon) {
    this.voucherDragon = voucherDragon;
    setVoucherDragonIsSet(true);
    return this;
  }

  public void unsetVoucherDragon() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __VOUCHERDRAGON_ISSET_ID);
  }

  /** Returns true if field voucherDragon is set (has been assigned a value) and false otherwise */
  public boolean isSetVoucherDragon() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __VOUCHERDRAGON_ISSET_ID);
  }

  public void setVoucherDragonIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __VOUCHERDRAGON_ISSET_ID, value);
  }

  public void setFieldValue(_Fields field, Object value) {
    switch (field) {
    case UID:
      if (value == null) {
        unsetUid();
      } else {
        setUid((String)value);
      }
      break;

    case USER_NAME:
      if (value == null) {
        unsetUserName();
      } else {
        setUserName((String)value);
      }
      break;

    case DISPLAY_NAME:
      if (value == null) {
        unsetDisplayName();
      } else {
        setDisplayName((String)value);
      }
      break;

    case EMAIL:
      if (value == null) {
        unsetEmail();
      } else {
        setEmail((String)value);
      }
      break;

    case PHONE:
      if (value == null) {
        unsetPhone();
      } else {
        setPhone((String)value);
      }
      break;

    case REGISTER_TIME:
      if (value == null) {
        unsetRegisterTime();
      } else {
        setRegisterTime((Integer)value);
      }
      break;

    case LOGIN_TIME:
      if (value == null) {
        unsetLoginTime();
      } else {
        setLoginTime((Integer)value);
      }
      break;

    case CHIP:
      if (value == null) {
        unsetChip();
      } else {
        setChip((Long)value);
      }
      break;

    case XU:
      if (value == null) {
        unsetXu();
      } else {
        setXu((Long)value);
      }
      break;

    case ITEM:
      if (value == null) {
        unsetItem();
      } else {
        setItem((java.util.List<Integer>)value);
      }
      break;

    case AVATAR_URL:
      if (value == null) {
        unsetAvatarURL();
      } else {
        setAvatarURL((String)value);
      }
      break;

    case BANK_MONEY:
      if (value == null) {
        unsetBankMoney();
      } else {
        setBankMoney((Long)value);
      }
      break;

    case GOLD:
      if (value == null) {
        unsetGold();
      } else {
        setGold((Long)value);
      }
      break;

    case DIAMOND:
      if (value == null) {
        unsetDiamond();
      } else {
        setDiamond((Long)value);
      }
      break;

    case TOKEN:
      if (value == null) {
        unsetToken();
      } else {
        setToken((Long)value);
      }
      break;

    case VOUCHER_PHOENIX:
      if (value == null) {
        unsetVoucherPhoenix();
      } else {
        setVoucherPhoenix((Long)value);
      }
      break;

    case VOUCHER_DRAGON:
      if (value == null) {
        unsetVoucherDragon();
      } else {
        setVoucherDragon((Long)value);
      }
      break;

    }
  }

  public Object getFieldValue(_Fields field) {
    switch (field) {
    case UID:
      return getUid();

    case USER_NAME:
      return getUserName();

    case DISPLAY_NAME:
      return getDisplayName();

    case EMAIL:
      return getEmail();

    case PHONE:
      return getPhone();

    case REGISTER_TIME:
      return getRegisterTime();

    case LOGIN_TIME:
      return getLoginTime();

    case CHIP:
      return getChip();

    case XU:
      return getXu();

    case ITEM:
      return getItem();

    case AVATAR_URL:
      return getAvatarURL();

    case BANK_MONEY:
      return getBankMoney();

    case GOLD:
      return getGold();

    case DIAMOND:
      return getDiamond();

    case TOKEN:
      return getToken();

    case VOUCHER_PHOENIX:
      return getVoucherPhoenix();

    case VOUCHER_DRAGON:
      return getVoucherDragon();

    }
    throw new IllegalStateException();
  }

  /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
  public boolean isSet(_Fields field) {
    if (field == null) {
      throw new IllegalArgumentException();
    }

    switch (field) {
    case UID:
      return isSetUid();
    case USER_NAME:
      return isSetUserName();
    case DISPLAY_NAME:
      return isSetDisplayName();
    case EMAIL:
      return isSetEmail();
    case PHONE:
      return isSetPhone();
    case REGISTER_TIME:
      return isSetRegisterTime();
    case LOGIN_TIME:
      return isSetLoginTime();
    case CHIP:
      return isSetChip();
    case XU:
      return isSetXu();
    case ITEM:
      return isSetItem();
    case AVATAR_URL:
      return isSetAvatarURL();
    case BANK_MONEY:
      return isSetBankMoney();
    case GOLD:
      return isSetGold();
    case DIAMOND:
      return isSetDiamond();
    case TOKEN:
      return isSetToken();
    case VOUCHER_PHOENIX:
      return isSetVoucherPhoenix();
    case VOUCHER_DRAGON:
      return isSetVoucherDragon();
    }
    throw new IllegalStateException();
  }

  @Override
  public boolean equals(Object that) {
    if (that == null)
      return false;
    if (that instanceof TUserInfo)
      return this.equals((TUserInfo)that);
    return false;
  }

  public boolean equals(TUserInfo that) {
    if (that == null)
      return false;
    if (this == that)
      return true;

    boolean this_present_uid = true && this.isSetUid();
    boolean that_present_uid = true && that.isSetUid();
    if (this_present_uid || that_present_uid) {
      if (!(this_present_uid && that_present_uid))
        return false;
      if (!this.uid.equals(that.uid))
        return false;
    }

    boolean this_present_userName = true && this.isSetUserName();
    boolean that_present_userName = true && that.isSetUserName();
    if (this_present_userName || that_present_userName) {
      if (!(this_present_userName && that_present_userName))
        return false;
      if (!this.userName.equals(that.userName))
        return false;
    }

    boolean this_present_displayName = true && this.isSetDisplayName();
    boolean that_present_displayName = true && that.isSetDisplayName();
    if (this_present_displayName || that_present_displayName) {
      if (!(this_present_displayName && that_present_displayName))
        return false;
      if (!this.displayName.equals(that.displayName))
        return false;
    }

    boolean this_present_email = true && this.isSetEmail();
    boolean that_present_email = true && that.isSetEmail();
    if (this_present_email || that_present_email) {
      if (!(this_present_email && that_present_email))
        return false;
      if (!this.email.equals(that.email))
        return false;
    }

    boolean this_present_phone = true && this.isSetPhone();
    boolean that_present_phone = true && that.isSetPhone();
    if (this_present_phone || that_present_phone) {
      if (!(this_present_phone && that_present_phone))
        return false;
      if (!this.phone.equals(that.phone))
        return false;
    }

    boolean this_present_registerTime = true;
    boolean that_present_registerTime = true;
    if (this_present_registerTime || that_present_registerTime) {
      if (!(this_present_registerTime && that_present_registerTime))
        return false;
      if (this.registerTime != that.registerTime)
        return false;
    }

    boolean this_present_loginTime = true;
    boolean that_present_loginTime = true;
    if (this_present_loginTime || that_present_loginTime) {
      if (!(this_present_loginTime && that_present_loginTime))
        return false;
      if (this.loginTime != that.loginTime)
        return false;
    }

    boolean this_present_chip = true;
    boolean that_present_chip = true;
    if (this_present_chip || that_present_chip) {
      if (!(this_present_chip && that_present_chip))
        return false;
      if (this.chip != that.chip)
        return false;
    }

    boolean this_present_xu = true;
    boolean that_present_xu = true;
    if (this_present_xu || that_present_xu) {
      if (!(this_present_xu && that_present_xu))
        return false;
      if (this.xu != that.xu)
        return false;
    }

    boolean this_present_item = true && this.isSetItem();
    boolean that_present_item = true && that.isSetItem();
    if (this_present_item || that_present_item) {
      if (!(this_present_item && that_present_item))
        return false;
      if (!this.item.equals(that.item))
        return false;
    }

    boolean this_present_avatarURL = true && this.isSetAvatarURL();
    boolean that_present_avatarURL = true && that.isSetAvatarURL();
    if (this_present_avatarURL || that_present_avatarURL) {
      if (!(this_present_avatarURL && that_present_avatarURL))
        return false;
      if (!this.avatarURL.equals(that.avatarURL))
        return false;
    }

    boolean this_present_bankMoney = true;
    boolean that_present_bankMoney = true;
    if (this_present_bankMoney || that_present_bankMoney) {
      if (!(this_present_bankMoney && that_present_bankMoney))
        return false;
      if (this.bankMoney != that.bankMoney)
        return false;
    }

    boolean this_present_gold = true;
    boolean that_present_gold = true;
    if (this_present_gold || that_present_gold) {
      if (!(this_present_gold && that_present_gold))
        return false;
      if (this.gold != that.gold)
        return false;
    }

    boolean this_present_diamond = true;
    boolean that_present_diamond = true;
    if (this_present_diamond || that_present_diamond) {
      if (!(this_present_diamond && that_present_diamond))
        return false;
      if (this.diamond != that.diamond)
        return false;
    }

    boolean this_present_token = true;
    boolean that_present_token = true;
    if (this_present_token || that_present_token) {
      if (!(this_present_token && that_present_token))
        return false;
      if (this.token != that.token)
        return false;
    }

    boolean this_present_voucherPhoenix = true;
    boolean that_present_voucherPhoenix = true;
    if (this_present_voucherPhoenix || that_present_voucherPhoenix) {
      if (!(this_present_voucherPhoenix && that_present_voucherPhoenix))
        return false;
      if (this.voucherPhoenix != that.voucherPhoenix)
        return false;
    }

    boolean this_present_voucherDragon = true;
    boolean that_present_voucherDragon = true;
    if (this_present_voucherDragon || that_present_voucherDragon) {
      if (!(this_present_voucherDragon && that_present_voucherDragon))
        return false;
      if (this.voucherDragon != that.voucherDragon)
        return false;
    }

    return true;
  }

  @Override
  public int hashCode() {
    int hashCode = 1;

    hashCode = hashCode * 8191 + ((isSetUid()) ? 131071 : 524287);
    if (isSetUid())
      hashCode = hashCode * 8191 + uid.hashCode();

    hashCode = hashCode * 8191 + ((isSetUserName()) ? 131071 : 524287);
    if (isSetUserName())
      hashCode = hashCode * 8191 + userName.hashCode();

    hashCode = hashCode * 8191 + ((isSetDisplayName()) ? 131071 : 524287);
    if (isSetDisplayName())
      hashCode = hashCode * 8191 + displayName.hashCode();

    hashCode = hashCode * 8191 + ((isSetEmail()) ? 131071 : 524287);
    if (isSetEmail())
      hashCode = hashCode * 8191 + email.hashCode();

    hashCode = hashCode * 8191 + ((isSetPhone()) ? 131071 : 524287);
    if (isSetPhone())
      hashCode = hashCode * 8191 + phone.hashCode();

    hashCode = hashCode * 8191 + registerTime;

    hashCode = hashCode * 8191 + loginTime;

    hashCode = hashCode * 8191 + org.apache.thrift.TBaseHelper.hashCode(chip);

    hashCode = hashCode * 8191 + org.apache.thrift.TBaseHelper.hashCode(xu);

    hashCode = hashCode * 8191 + ((isSetItem()) ? 131071 : 524287);
    if (isSetItem())
      hashCode = hashCode * 8191 + item.hashCode();

    hashCode = hashCode * 8191 + ((isSetAvatarURL()) ? 131071 : 524287);
    if (isSetAvatarURL())
      hashCode = hashCode * 8191 + avatarURL.hashCode();

    hashCode = hashCode * 8191 + org.apache.thrift.TBaseHelper.hashCode(bankMoney);

    hashCode = hashCode * 8191 + org.apache.thrift.TBaseHelper.hashCode(gold);

    hashCode = hashCode * 8191 + org.apache.thrift.TBaseHelper.hashCode(diamond);

    hashCode = hashCode * 8191 + org.apache.thrift.TBaseHelper.hashCode(token);

    hashCode = hashCode * 8191 + org.apache.thrift.TBaseHelper.hashCode(voucherPhoenix);

    hashCode = hashCode * 8191 + org.apache.thrift.TBaseHelper.hashCode(voucherDragon);

    return hashCode;
  }

  @Override
  public int compareTo(TUserInfo other) {
    if (!getClass().equals(other.getClass())) {
      return getClass().getName().compareTo(other.getClass().getName());
    }

    int lastComparison = 0;

    lastComparison = Boolean.valueOf(isSetUid()).compareTo(other.isSetUid());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetUid()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.uid, other.uid);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetUserName()).compareTo(other.isSetUserName());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetUserName()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.userName, other.userName);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetDisplayName()).compareTo(other.isSetDisplayName());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetDisplayName()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.displayName, other.displayName);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetEmail()).compareTo(other.isSetEmail());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetEmail()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.email, other.email);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetPhone()).compareTo(other.isSetPhone());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetPhone()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.phone, other.phone);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetRegisterTime()).compareTo(other.isSetRegisterTime());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetRegisterTime()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.registerTime, other.registerTime);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetLoginTime()).compareTo(other.isSetLoginTime());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetLoginTime()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.loginTime, other.loginTime);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetChip()).compareTo(other.isSetChip());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetChip()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.chip, other.chip);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetXu()).compareTo(other.isSetXu());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetXu()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.xu, other.xu);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetItem()).compareTo(other.isSetItem());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetItem()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.item, other.item);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetAvatarURL()).compareTo(other.isSetAvatarURL());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetAvatarURL()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.avatarURL, other.avatarURL);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetBankMoney()).compareTo(other.isSetBankMoney());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetBankMoney()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.bankMoney, other.bankMoney);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetGold()).compareTo(other.isSetGold());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetGold()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.gold, other.gold);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetDiamond()).compareTo(other.isSetDiamond());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetDiamond()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.diamond, other.diamond);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetToken()).compareTo(other.isSetToken());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetToken()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.token, other.token);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetVoucherPhoenix()).compareTo(other.isSetVoucherPhoenix());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetVoucherPhoenix()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.voucherPhoenix, other.voucherPhoenix);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetVoucherDragon()).compareTo(other.isSetVoucherDragon());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetVoucherDragon()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.voucherDragon, other.voucherDragon);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    return 0;
  }

  public _Fields fieldForId(int fieldId) {
    return _Fields.findByThriftId(fieldId);
  }

  public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
    scheme(iprot).read(iprot, this);
  }

  public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
    scheme(oprot).write(oprot, this);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder("TUserInfo(");
    boolean first = true;

    sb.append("uid:");
    if (this.uid == null) {
      sb.append("null");
    } else {
      sb.append(this.uid);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("userName:");
    if (this.userName == null) {
      sb.append("null");
    } else {
      sb.append(this.userName);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("displayName:");
    if (this.displayName == null) {
      sb.append("null");
    } else {
      sb.append(this.displayName);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("email:");
    if (this.email == null) {
      sb.append("null");
    } else {
      sb.append(this.email);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("phone:");
    if (this.phone == null) {
      sb.append("null");
    } else {
      sb.append(this.phone);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("registerTime:");
    sb.append(this.registerTime);
    first = false;
    if (!first) sb.append(", ");
    sb.append("loginTime:");
    sb.append(this.loginTime);
    first = false;
    if (!first) sb.append(", ");
    sb.append("chip:");
    sb.append(this.chip);
    first = false;
    if (!first) sb.append(", ");
    sb.append("xu:");
    sb.append(this.xu);
    first = false;
    if (!first) sb.append(", ");
    sb.append("item:");
    if (this.item == null) {
      sb.append("null");
    } else {
      sb.append(this.item);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("avatarURL:");
    if (this.avatarURL == null) {
      sb.append("null");
    } else {
      sb.append(this.avatarURL);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("bankMoney:");
    sb.append(this.bankMoney);
    first = false;
    if (!first) sb.append(", ");
    sb.append("gold:");
    sb.append(this.gold);
    first = false;
    if (!first) sb.append(", ");
    sb.append("diamond:");
    sb.append(this.diamond);
    first = false;
    if (!first) sb.append(", ");
    sb.append("token:");
    sb.append(this.token);
    first = false;
    if (!first) sb.append(", ");
    sb.append("voucherPhoenix:");
    sb.append(this.voucherPhoenix);
    first = false;
    if (!first) sb.append(", ");
    sb.append("voucherDragon:");
    sb.append(this.voucherDragon);
    first = false;
    sb.append(")");
    return sb.toString();
  }

  public void validate() throws org.apache.thrift.TException {
    // check for required fields
    // check for sub-struct validity
  }

  private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
    try {
      write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, ClassNotFoundException {
    try {
      // it doesn't seem like you should have to do this, but java serialization is wacky, and doesn't call the default constructor.
      __isset_bitfield = 0;
      read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private static class TUserInfoStandardSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
    public TUserInfoStandardScheme getScheme() {
      return new TUserInfoStandardScheme();
    }
  }

  private static class TUserInfoStandardScheme extends org.apache.thrift.scheme.StandardScheme<TUserInfo> {

    public void read(org.apache.thrift.protocol.TProtocol iprot, TUserInfo struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TField schemeField;
      iprot.readStructBegin();
      while (true)
      {
        schemeField = iprot.readFieldBegin();
        if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
          break;
        }
        switch (schemeField.id) {
          case 1: // UID
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.uid = iprot.readString();
              struct.setUidIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 2: // USER_NAME
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.userName = iprot.readString();
              struct.setUserNameIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 3: // DISPLAY_NAME
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.displayName = iprot.readString();
              struct.setDisplayNameIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 4: // EMAIL
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.email = iprot.readString();
              struct.setEmailIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 5: // PHONE
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.phone = iprot.readString();
              struct.setPhoneIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 6: // REGISTER_TIME
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.registerTime = iprot.readI32();
              struct.setRegisterTimeIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 7: // LOGIN_TIME
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.loginTime = iprot.readI32();
              struct.setLoginTimeIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 8: // CHIP
            if (schemeField.type == org.apache.thrift.protocol.TType.I64) {
              struct.chip = iprot.readI64();
              struct.setChipIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 9: // XU
            if (schemeField.type == org.apache.thrift.protocol.TType.I64) {
              struct.xu = iprot.readI64();
              struct.setXuIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 10: // ITEM
            if (schemeField.type == org.apache.thrift.protocol.TType.LIST) {
              {
                org.apache.thrift.protocol.TList _list0 = iprot.readListBegin();
                struct.item = new java.util.ArrayList<Integer>(_list0.size);
                int _elem1;
                for (int _i2 = 0; _i2 < _list0.size; ++_i2)
                {
                  _elem1 = iprot.readI32();
                  struct.item.add(_elem1);
                }
                iprot.readListEnd();
              }
              struct.setItemIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 11: // AVATAR_URL
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.avatarURL = iprot.readString();
              struct.setAvatarURLIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 12: // BANK_MONEY
            if (schemeField.type == org.apache.thrift.protocol.TType.I64) {
              struct.bankMoney = iprot.readI64();
              struct.setBankMoneyIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 13: // GOLD
            if (schemeField.type == org.apache.thrift.protocol.TType.I64) {
              struct.gold = iprot.readI64();
              struct.setGoldIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 14: // DIAMOND
            if (schemeField.type == org.apache.thrift.protocol.TType.I64) {
              struct.diamond = iprot.readI64();
              struct.setDiamondIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 15: // TOKEN
            if (schemeField.type == org.apache.thrift.protocol.TType.I64) {
              struct.token = iprot.readI64();
              struct.setTokenIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 17: // VOUCHER_PHOENIX
            if (schemeField.type == org.apache.thrift.protocol.TType.I64) {
              struct.voucherPhoenix = iprot.readI64();
              struct.setVoucherPhoenixIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 18: // VOUCHER_DRAGON
            if (schemeField.type == org.apache.thrift.protocol.TType.I64) {
              struct.voucherDragon = iprot.readI64();
              struct.setVoucherDragonIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          default:
            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
        }
        iprot.readFieldEnd();
      }
      iprot.readStructEnd();

      // check for required fields of primitive type, which can't be checked in the validate method
      struct.validate();
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot, TUserInfo struct) throws org.apache.thrift.TException {
      struct.validate();

      oprot.writeStructBegin(STRUCT_DESC);
      if (struct.uid != null) {
        oprot.writeFieldBegin(UID_FIELD_DESC);
        oprot.writeString(struct.uid);
        oprot.writeFieldEnd();
      }
      if (struct.userName != null) {
        oprot.writeFieldBegin(USER_NAME_FIELD_DESC);
        oprot.writeString(struct.userName);
        oprot.writeFieldEnd();
      }
      if (struct.displayName != null) {
        oprot.writeFieldBegin(DISPLAY_NAME_FIELD_DESC);
        oprot.writeString(struct.displayName);
        oprot.writeFieldEnd();
      }
      if (struct.email != null) {
        oprot.writeFieldBegin(EMAIL_FIELD_DESC);
        oprot.writeString(struct.email);
        oprot.writeFieldEnd();
      }
      if (struct.phone != null) {
        oprot.writeFieldBegin(PHONE_FIELD_DESC);
        oprot.writeString(struct.phone);
        oprot.writeFieldEnd();
      }
      oprot.writeFieldBegin(REGISTER_TIME_FIELD_DESC);
      oprot.writeI32(struct.registerTime);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(LOGIN_TIME_FIELD_DESC);
      oprot.writeI32(struct.loginTime);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(CHIP_FIELD_DESC);
      oprot.writeI64(struct.chip);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(XU_FIELD_DESC);
      oprot.writeI64(struct.xu);
      oprot.writeFieldEnd();
      if (struct.item != null) {
        oprot.writeFieldBegin(ITEM_FIELD_DESC);
        {
          oprot.writeListBegin(new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.I32, struct.item.size()));
          for (int _iter3 : struct.item)
          {
            oprot.writeI32(_iter3);
          }
          oprot.writeListEnd();
        }
        oprot.writeFieldEnd();
      }
      if (struct.avatarURL != null) {
        oprot.writeFieldBegin(AVATAR_URL_FIELD_DESC);
        oprot.writeString(struct.avatarURL);
        oprot.writeFieldEnd();
      }
      oprot.writeFieldBegin(BANK_MONEY_FIELD_DESC);
      oprot.writeI64(struct.bankMoney);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(GOLD_FIELD_DESC);
      oprot.writeI64(struct.gold);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(DIAMOND_FIELD_DESC);
      oprot.writeI64(struct.diamond);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(TOKEN_FIELD_DESC);
      oprot.writeI64(struct.token);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(VOUCHER_PHOENIX_FIELD_DESC);
      oprot.writeI64(struct.voucherPhoenix);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(VOUCHER_DRAGON_FIELD_DESC);
      oprot.writeI64(struct.voucherDragon);
      oprot.writeFieldEnd();
      oprot.writeFieldStop();
      oprot.writeStructEnd();
    }

  }

  private static class TUserInfoTupleSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
    public TUserInfoTupleScheme getScheme() {
      return new TUserInfoTupleScheme();
    }
  }

  private static class TUserInfoTupleScheme extends org.apache.thrift.scheme.TupleScheme<TUserInfo> {

    @Override
    public void write(org.apache.thrift.protocol.TProtocol prot, TUserInfo struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TTupleProtocol oprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
      java.util.BitSet optionals = new java.util.BitSet();
      if (struct.isSetUid()) {
        optionals.set(0);
      }
      if (struct.isSetUserName()) {
        optionals.set(1);
      }
      if (struct.isSetDisplayName()) {
        optionals.set(2);
      }
      if (struct.isSetEmail()) {
        optionals.set(3);
      }
      if (struct.isSetPhone()) {
        optionals.set(4);
      }
      if (struct.isSetRegisterTime()) {
        optionals.set(5);
      }
      if (struct.isSetLoginTime()) {
        optionals.set(6);
      }
      if (struct.isSetChip()) {
        optionals.set(7);
      }
      if (struct.isSetXu()) {
        optionals.set(8);
      }
      if (struct.isSetItem()) {
        optionals.set(9);
      }
      if (struct.isSetAvatarURL()) {
        optionals.set(10);
      }
      if (struct.isSetBankMoney()) {
        optionals.set(11);
      }
      if (struct.isSetGold()) {
        optionals.set(12);
      }
      if (struct.isSetDiamond()) {
        optionals.set(13);
      }
      if (struct.isSetToken()) {
        optionals.set(14);
      }
      if (struct.isSetVoucherPhoenix()) {
        optionals.set(15);
      }
      if (struct.isSetVoucherDragon()) {
        optionals.set(16);
      }
      oprot.writeBitSet(optionals, 17);
      if (struct.isSetUid()) {
        oprot.writeString(struct.uid);
      }
      if (struct.isSetUserName()) {
        oprot.writeString(struct.userName);
      }
      if (struct.isSetDisplayName()) {
        oprot.writeString(struct.displayName);
      }
      if (struct.isSetEmail()) {
        oprot.writeString(struct.email);
      }
      if (struct.isSetPhone()) {
        oprot.writeString(struct.phone);
      }
      if (struct.isSetRegisterTime()) {
        oprot.writeI32(struct.registerTime);
      }
      if (struct.isSetLoginTime()) {
        oprot.writeI32(struct.loginTime);
      }
      if (struct.isSetChip()) {
        oprot.writeI64(struct.chip);
      }
      if (struct.isSetXu()) {
        oprot.writeI64(struct.xu);
      }
      if (struct.isSetItem()) {
        {
          oprot.writeI32(struct.item.size());
          for (int _iter4 : struct.item)
          {
            oprot.writeI32(_iter4);
          }
        }
      }
      if (struct.isSetAvatarURL()) {
        oprot.writeString(struct.avatarURL);
      }
      if (struct.isSetBankMoney()) {
        oprot.writeI64(struct.bankMoney);
      }
      if (struct.isSetGold()) {
        oprot.writeI64(struct.gold);
      }
      if (struct.isSetDiamond()) {
        oprot.writeI64(struct.diamond);
      }
      if (struct.isSetToken()) {
        oprot.writeI64(struct.token);
      }
      if (struct.isSetVoucherPhoenix()) {
        oprot.writeI64(struct.voucherPhoenix);
      }
      if (struct.isSetVoucherDragon()) {
        oprot.writeI64(struct.voucherDragon);
      }
    }

    @Override
    public void read(org.apache.thrift.protocol.TProtocol prot, TUserInfo struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TTupleProtocol iprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
      java.util.BitSet incoming = iprot.readBitSet(17);
      if (incoming.get(0)) {
        struct.uid = iprot.readString();
        struct.setUidIsSet(true);
      }
      if (incoming.get(1)) {
        struct.userName = iprot.readString();
        struct.setUserNameIsSet(true);
      }
      if (incoming.get(2)) {
        struct.displayName = iprot.readString();
        struct.setDisplayNameIsSet(true);
      }
      if (incoming.get(3)) {
        struct.email = iprot.readString();
        struct.setEmailIsSet(true);
      }
      if (incoming.get(4)) {
        struct.phone = iprot.readString();
        struct.setPhoneIsSet(true);
      }
      if (incoming.get(5)) {
        struct.registerTime = iprot.readI32();
        struct.setRegisterTimeIsSet(true);
      }
      if (incoming.get(6)) {
        struct.loginTime = iprot.readI32();
        struct.setLoginTimeIsSet(true);
      }
      if (incoming.get(7)) {
        struct.chip = iprot.readI64();
        struct.setChipIsSet(true);
      }
      if (incoming.get(8)) {
        struct.xu = iprot.readI64();
        struct.setXuIsSet(true);
      }
      if (incoming.get(9)) {
        {
          org.apache.thrift.protocol.TList _list5 = new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.I32, iprot.readI32());
          struct.item = new java.util.ArrayList<Integer>(_list5.size);
          int _elem6;
          for (int _i7 = 0; _i7 < _list5.size; ++_i7)
          {
            _elem6 = iprot.readI32();
            struct.item.add(_elem6);
          }
        }
        struct.setItemIsSet(true);
      }
      if (incoming.get(10)) {
        struct.avatarURL = iprot.readString();
        struct.setAvatarURLIsSet(true);
      }
      if (incoming.get(11)) {
        struct.bankMoney = iprot.readI64();
        struct.setBankMoneyIsSet(true);
      }
      if (incoming.get(12)) {
        struct.gold = iprot.readI64();
        struct.setGoldIsSet(true);
      }
      if (incoming.get(13)) {
        struct.diamond = iprot.readI64();
        struct.setDiamondIsSet(true);
      }
      if (incoming.get(14)) {
        struct.token = iprot.readI64();
        struct.setTokenIsSet(true);
      }
      if (incoming.get(15)) {
        struct.voucherPhoenix = iprot.readI64();
        struct.setVoucherPhoenixIsSet(true);
      }
      if (incoming.get(16)) {
        struct.voucherDragon = iprot.readI64();
        struct.setVoucherDragonIsSet(true);
      }
    }
  }

  private static <S extends org.apache.thrift.scheme.IScheme> S scheme(org.apache.thrift.protocol.TProtocol proto) {
    return (org.apache.thrift.scheme.StandardScheme.class.equals(proto.getScheme()) ? STANDARD_SCHEME_FACTORY : TUPLE_SCHEME_FACTORY).getScheme();
  }
}

