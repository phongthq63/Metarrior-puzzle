/**
 * Autogenerated by Thrift Compiler (0.10.0)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
package com.bamisu.log.gamethrift.entities;

@SuppressWarnings({"cast", "rawtypes", "serial", "unchecked", "unused"})
@javax.annotation.Generated(value = "Autogenerated by Thrift Compiler (0.10.0)", date = "2018-04-05")
public class TLoginInfo implements org.apache.thrift.TBase<TLoginInfo, TLoginInfo._Fields>, java.io.Serializable, Cloneable, Comparable<TLoginInfo> {
  private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("TLoginInfo");

  private static final org.apache.thrift.protocol.TField UID_FIELD_DESC = new org.apache.thrift.protocol.TField("uid", org.apache.thrift.protocol.TType.I64, (short)1);
  private static final org.apache.thrift.protocol.TField UNAME_FIELD_DESC = new org.apache.thrift.protocol.TField("uname", org.apache.thrift.protocol.TType.STRING, (short)2);
  private static final org.apache.thrift.protocol.TField DNAME_FIELD_DESC = new org.apache.thrift.protocol.TField("dname", org.apache.thrift.protocol.TType.STRING, (short)3);
  private static final org.apache.thrift.protocol.TField DID_FIELD_DESC = new org.apache.thrift.protocol.TField("did", org.apache.thrift.protocol.TType.STRING, (short)4);
  private static final org.apache.thrift.protocol.TField LASTLOGIN_FIELD_DESC = new org.apache.thrift.protocol.TField("lastlogin", org.apache.thrift.protocol.TType.I32, (short)5);
  private static final org.apache.thrift.protocol.TField CREATED_FIELD_DESC = new org.apache.thrift.protocol.TField("created", org.apache.thrift.protocol.TType.I32, (short)6);
  private static final org.apache.thrift.protocol.TField CHIP_FIELD_DESC = new org.apache.thrift.protocol.TField("chip", org.apache.thrift.protocol.TType.I64, (short)7);

  private static final org.apache.thrift.scheme.SchemeFactory STANDARD_SCHEME_FACTORY = new TLoginInfoStandardSchemeFactory();
  private static final org.apache.thrift.scheme.SchemeFactory TUPLE_SCHEME_FACTORY = new TLoginInfoTupleSchemeFactory();

  public long uid; // required
  public String uname; // required
  public String dname; // required
  public String did; // required
  public int lastlogin; // required
  public int created; // required
  public long chip; // required

  /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
  public enum _Fields implements org.apache.thrift.TFieldIdEnum {
    UID((short)1, "uid"),
    UNAME((short)2, "uname"),
    DNAME((short)3, "dname"),
    DID((short)4, "did"),
    LASTLOGIN((short)5, "lastlogin"),
    CREATED((short)6, "created"),
    CHIP((short)7, "chip");

    private static final java.util.Map<String, _Fields> byName = new java.util.HashMap<String, _Fields>();

    static {
      for (_Fields field : java.util.EnumSet.allOf(_Fields.class)) {
        byName.put(field.getFieldName(), field);
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, or null if its not found.
     */
    public static _Fields findByThriftId(int fieldId) {
      switch(fieldId) {
        case 1: // UID
          return UID;
        case 2: // UNAME
          return UNAME;
        case 3: // DNAME
          return DNAME;
        case 4: // DID
          return DID;
        case 5: // LASTLOGIN
          return LASTLOGIN;
        case 6: // CREATED
          return CREATED;
        case 7: // CHIP
          return CHIP;
        default:
          return null;
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, throwing an exception
     * if it is not found.
     */
    public static _Fields findByThriftIdOrThrow(int fieldId) {
      _Fields fields = findByThriftId(fieldId);
      if (fields == null) throw new IllegalArgumentException("Field " + fieldId + " doesn't exist!");
      return fields;
    }

    /**
     * Find the _Fields constant that matches name, or null if its not found.
     */
    public static _Fields findByName(String name) {
      return byName.get(name);
    }

    private final short _thriftId;
    private final String _fieldName;

    _Fields(short thriftId, String fieldName) {
      _thriftId = thriftId;
      _fieldName = fieldName;
    }

    public short getThriftFieldId() {
      return _thriftId;
    }

    public String getFieldName() {
      return _fieldName;
    }
  }

  // isset id assignments
  private static final int __UID_ISSET_ID = 0;
  private static final int __LASTLOGIN_ISSET_ID = 1;
  private static final int __CREATED_ISSET_ID = 2;
  private static final int __CHIP_ISSET_ID = 3;
  private byte __isset_bitfield = 0;
  public static final java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
  static {
    java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new java.util.EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
    tmpMap.put(_Fields.UID, new org.apache.thrift.meta_data.FieldMetaData("uid", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I64        , "long")));
    tmpMap.put(_Fields.UNAME, new org.apache.thrift.meta_data.FieldMetaData("uname", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.DNAME, new org.apache.thrift.meta_data.FieldMetaData("dname", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.DID, new org.apache.thrift.meta_data.FieldMetaData("did", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.LASTLOGIN, new org.apache.thrift.meta_data.FieldMetaData("lastlogin", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32        , "int")));
    tmpMap.put(_Fields.CREATED, new org.apache.thrift.meta_data.FieldMetaData("created", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32        , "int")));
    tmpMap.put(_Fields.CHIP, new org.apache.thrift.meta_data.FieldMetaData("chip", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I64        , "long")));
    metaDataMap = java.util.Collections.unmodifiableMap(tmpMap);
    org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(TLoginInfo.class, metaDataMap);
  }

  public TLoginInfo() {
  }

  public TLoginInfo(
    long uid,
    String uname,
    String dname,
    String did,
    int lastlogin,
    int created,
    long chip)
  {
    this();
    this.uid = uid;
    setUidIsSet(true);
    this.uname = uname;
    this.dname = dname;
    this.did = did;
    this.lastlogin = lastlogin;
    setLastloginIsSet(true);
    this.created = created;
    setCreatedIsSet(true);
    this.chip = chip;
    setChipIsSet(true);
  }

  /**
   * Performs a deep copy on <i>other</i>.
   */
  public TLoginInfo(TLoginInfo other) {
    __isset_bitfield = other.__isset_bitfield;
    this.uid = other.uid;
    if (other.isSetUname()) {
      this.uname = other.uname;
    }
    if (other.isSetDname()) {
      this.dname = other.dname;
    }
    if (other.isSetDid()) {
      this.did = other.did;
    }
    this.lastlogin = other.lastlogin;
    this.created = other.created;
    this.chip = other.chip;
  }

  public TLoginInfo deepCopy() {
    return new TLoginInfo(this);
  }

  @Override
  public void clear() {
    setUidIsSet(false);
    this.uid = 0;
    this.uname = null;
    this.dname = null;
    this.did = null;
    setLastloginIsSet(false);
    this.lastlogin = 0;
    setCreatedIsSet(false);
    this.created = 0;
    setChipIsSet(false);
    this.chip = 0;
  }

  public long getUid() {
    return this.uid;
  }

  public TLoginInfo setUid(long uid) {
    this.uid = uid;
    setUidIsSet(true);
    return this;
  }

  public void unsetUid() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __UID_ISSET_ID);
  }

  /** Returns true if field uid is set (has been assigned a value) and false otherwise */
  public boolean isSetUid() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __UID_ISSET_ID);
  }

  public void setUidIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __UID_ISSET_ID, value);
  }

  public String getUname() {
    return this.uname;
  }

  public TLoginInfo setUname(String uname) {
    this.uname = uname;
    return this;
  }

  public void unsetUname() {
    this.uname = null;
  }

  /** Returns true if field uname is set (has been assigned a value) and false otherwise */
  public boolean isSetUname() {
    return this.uname != null;
  }

  public void setUnameIsSet(boolean value) {
    if (!value) {
      this.uname = null;
    }
  }

  public String getDname() {
    return this.dname;
  }

  public TLoginInfo setDname(String dname) {
    this.dname = dname;
    return this;
  }

  public void unsetDname() {
    this.dname = null;
  }

  /** Returns true if field dname is set (has been assigned a value) and false otherwise */
  public boolean isSetDname() {
    return this.dname != null;
  }

  public void setDnameIsSet(boolean value) {
    if (!value) {
      this.dname = null;
    }
  }

  public String getDid() {
    return this.did;
  }

  public TLoginInfo setDid(String did) {
    this.did = did;
    return this;
  }

  public void unsetDid() {
    this.did = null;
  }

  /** Returns true if field did is set (has been assigned a value) and false otherwise */
  public boolean isSetDid() {
    return this.did != null;
  }

  public void setDidIsSet(boolean value) {
    if (!value) {
      this.did = null;
    }
  }

  public int getLastlogin() {
    return this.lastlogin;
  }

  public TLoginInfo setLastlogin(int lastlogin) {
    this.lastlogin = lastlogin;
    setLastloginIsSet(true);
    return this;
  }

  public void unsetLastlogin() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __LASTLOGIN_ISSET_ID);
  }

  /** Returns true if field lastlogin is set (has been assigned a value) and false otherwise */
  public boolean isSetLastlogin() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __LASTLOGIN_ISSET_ID);
  }

  public void setLastloginIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __LASTLOGIN_ISSET_ID, value);
  }

  public int getCreated() {
    return this.created;
  }

  public TLoginInfo setCreated(int created) {
    this.created = created;
    setCreatedIsSet(true);
    return this;
  }

  public void unsetCreated() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __CREATED_ISSET_ID);
  }

  /** Returns true if field created is set (has been assigned a value) and false otherwise */
  public boolean isSetCreated() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __CREATED_ISSET_ID);
  }

  public void setCreatedIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __CREATED_ISSET_ID, value);
  }

  public long getChip() {
    return this.chip;
  }

  public TLoginInfo setChip(long chip) {
    this.chip = chip;
    setChipIsSet(true);
    return this;
  }

  public void unsetChip() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __CHIP_ISSET_ID);
  }

  /** Returns true if field chip is set (has been assigned a value) and false otherwise */
  public boolean isSetChip() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __CHIP_ISSET_ID);
  }

  public void setChipIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __CHIP_ISSET_ID, value);
  }

  public void setFieldValue(_Fields field, Object value) {
    switch (field) {
    case UID:
      if (value == null) {
        unsetUid();
      } else {
        setUid((Long)value);
      }
      break;

    case UNAME:
      if (value == null) {
        unsetUname();
      } else {
        setUname((String)value);
      }
      break;

    case DNAME:
      if (value == null) {
        unsetDname();
      } else {
        setDname((String)value);
      }
      break;

    case DID:
      if (value == null) {
        unsetDid();
      } else {
        setDid((String)value);
      }
      break;

    case LASTLOGIN:
      if (value == null) {
        unsetLastlogin();
      } else {
        setLastlogin((Integer)value);
      }
      break;

    case CREATED:
      if (value == null) {
        unsetCreated();
      } else {
        setCreated((Integer)value);
      }
      break;

    case CHIP:
      if (value == null) {
        unsetChip();
      } else {
        setChip((Long)value);
      }
      break;

    }
  }

  public Object getFieldValue(_Fields field) {
    switch (field) {
    case UID:
      return getUid();

    case UNAME:
      return getUname();

    case DNAME:
      return getDname();

    case DID:
      return getDid();

    case LASTLOGIN:
      return getLastlogin();

    case CREATED:
      return getCreated();

    case CHIP:
      return getChip();

    }
    throw new IllegalStateException();
  }

  /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
  public boolean isSet(_Fields field) {
    if (field == null) {
      throw new IllegalArgumentException();
    }

    switch (field) {
    case UID:
      return isSetUid();
    case UNAME:
      return isSetUname();
    case DNAME:
      return isSetDname();
    case DID:
      return isSetDid();
    case LASTLOGIN:
      return isSetLastlogin();
    case CREATED:
      return isSetCreated();
    case CHIP:
      return isSetChip();
    }
    throw new IllegalStateException();
  }

  @Override
  public boolean equals(Object that) {
    if (that == null)
      return false;
    if (that instanceof TLoginInfo)
      return this.equals((TLoginInfo)that);
    return false;
  }

  public boolean equals(TLoginInfo that) {
    if (that == null)
      return false;
    if (this == that)
      return true;

    boolean this_present_uid = true;
    boolean that_present_uid = true;
    if (this_present_uid || that_present_uid) {
      if (!(this_present_uid && that_present_uid))
        return false;
      if (this.uid != that.uid)
        return false;
    }

    boolean this_present_uname = true && this.isSetUname();
    boolean that_present_uname = true && that.isSetUname();
    if (this_present_uname || that_present_uname) {
      if (!(this_present_uname && that_present_uname))
        return false;
      if (!this.uname.equals(that.uname))
        return false;
    }

    boolean this_present_dname = true && this.isSetDname();
    boolean that_present_dname = true && that.isSetDname();
    if (this_present_dname || that_present_dname) {
      if (!(this_present_dname && that_present_dname))
        return false;
      if (!this.dname.equals(that.dname))
        return false;
    }

    boolean this_present_did = true && this.isSetDid();
    boolean that_present_did = true && that.isSetDid();
    if (this_present_did || that_present_did) {
      if (!(this_present_did && that_present_did))
        return false;
      if (!this.did.equals(that.did))
        return false;
    }

    boolean this_present_lastlogin = true;
    boolean that_present_lastlogin = true;
    if (this_present_lastlogin || that_present_lastlogin) {
      if (!(this_present_lastlogin && that_present_lastlogin))
        return false;
      if (this.lastlogin != that.lastlogin)
        return false;
    }

    boolean this_present_created = true;
    boolean that_present_created = true;
    if (this_present_created || that_present_created) {
      if (!(this_present_created && that_present_created))
        return false;
      if (this.created != that.created)
        return false;
    }

    boolean this_present_chip = true;
    boolean that_present_chip = true;
    if (this_present_chip || that_present_chip) {
      if (!(this_present_chip && that_present_chip))
        return false;
      if (this.chip != that.chip)
        return false;
    }

    return true;
  }

  @Override
  public int hashCode() {
    int hashCode = 1;

    hashCode = hashCode * 8191 + org.apache.thrift.TBaseHelper.hashCode(uid);

    hashCode = hashCode * 8191 + ((isSetUname()) ? 131071 : 524287);
    if (isSetUname())
      hashCode = hashCode * 8191 + uname.hashCode();

    hashCode = hashCode * 8191 + ((isSetDname()) ? 131071 : 524287);
    if (isSetDname())
      hashCode = hashCode * 8191 + dname.hashCode();

    hashCode = hashCode * 8191 + ((isSetDid()) ? 131071 : 524287);
    if (isSetDid())
      hashCode = hashCode * 8191 + did.hashCode();

    hashCode = hashCode * 8191 + lastlogin;

    hashCode = hashCode * 8191 + created;

    hashCode = hashCode * 8191 + org.apache.thrift.TBaseHelper.hashCode(chip);

    return hashCode;
  }

  @Override
  public int compareTo(TLoginInfo other) {
    if (!getClass().equals(other.getClass())) {
      return getClass().getName().compareTo(other.getClass().getName());
    }

    int lastComparison = 0;

    lastComparison = Boolean.valueOf(isSetUid()).compareTo(other.isSetUid());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetUid()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.uid, other.uid);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetUname()).compareTo(other.isSetUname());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetUname()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.uname, other.uname);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetDname()).compareTo(other.isSetDname());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetDname()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.dname, other.dname);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetDid()).compareTo(other.isSetDid());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetDid()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.did, other.did);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetLastlogin()).compareTo(other.isSetLastlogin());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetLastlogin()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.lastlogin, other.lastlogin);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetCreated()).compareTo(other.isSetCreated());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetCreated()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.created, other.created);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetChip()).compareTo(other.isSetChip());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetChip()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.chip, other.chip);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    return 0;
  }

  public _Fields fieldForId(int fieldId) {
    return _Fields.findByThriftId(fieldId);
  }

  public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
    scheme(iprot).read(iprot, this);
  }

  public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
    scheme(oprot).write(oprot, this);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder("TLoginInfo(");
    boolean first = true;

    sb.append("uid:");
    sb.append(this.uid);
    first = false;
    if (!first) sb.append(", ");
    sb.append("uname:");
    if (this.uname == null) {
      sb.append("null");
    } else {
      sb.append(this.uname);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("dname:");
    if (this.dname == null) {
      sb.append("null");
    } else {
      sb.append(this.dname);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("did:");
    if (this.did == null) {
      sb.append("null");
    } else {
      sb.append(this.did);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("lastlogin:");
    sb.append(this.lastlogin);
    first = false;
    if (!first) sb.append(", ");
    sb.append("created:");
    sb.append(this.created);
    first = false;
    if (!first) sb.append(", ");
    sb.append("chip:");
    sb.append(this.chip);
    first = false;
    sb.append(")");
    return sb.toString();
  }

  public void validate() throws org.apache.thrift.TException {
    // check for required fields
    // check for sub-struct validity
  }

  private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
    try {
      write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, ClassNotFoundException {
    try {
      // it doesn't seem like you should have to do this, but java serialization is wacky, and doesn't call the default constructor.
      __isset_bitfield = 0;
      read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private static class TLoginInfoStandardSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
    public TLoginInfoStandardScheme getScheme() {
      return new TLoginInfoStandardScheme();
    }
  }

  private static class TLoginInfoStandardScheme extends org.apache.thrift.scheme.StandardScheme<TLoginInfo> {

    public void read(org.apache.thrift.protocol.TProtocol iprot, TLoginInfo struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TField schemeField;
      iprot.readStructBegin();
      while (true)
      {
        schemeField = iprot.readFieldBegin();
        if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
          break;
        }
        switch (schemeField.id) {
          case 1: // UID
            if (schemeField.type == org.apache.thrift.protocol.TType.I64) {
              struct.uid = iprot.readI64();
              struct.setUidIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 2: // UNAME
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.uname = iprot.readString();
              struct.setUnameIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 3: // DNAME
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.dname = iprot.readString();
              struct.setDnameIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 4: // DID
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.did = iprot.readString();
              struct.setDidIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 5: // LASTLOGIN
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.lastlogin = iprot.readI32();
              struct.setLastloginIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 6: // CREATED
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.created = iprot.readI32();
              struct.setCreatedIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 7: // CHIP
            if (schemeField.type == org.apache.thrift.protocol.TType.I64) {
              struct.chip = iprot.readI64();
              struct.setChipIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          default:
            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
        }
        iprot.readFieldEnd();
      }
      iprot.readStructEnd();

      // check for required fields of primitive type, which can't be checked in the validate method
      struct.validate();
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot, TLoginInfo struct) throws org.apache.thrift.TException {
      struct.validate();

      oprot.writeStructBegin(STRUCT_DESC);
      oprot.writeFieldBegin(UID_FIELD_DESC);
      oprot.writeI64(struct.uid);
      oprot.writeFieldEnd();
      if (struct.uname != null) {
        oprot.writeFieldBegin(UNAME_FIELD_DESC);
        oprot.writeString(struct.uname);
        oprot.writeFieldEnd();
      }
      if (struct.dname != null) {
        oprot.writeFieldBegin(DNAME_FIELD_DESC);
        oprot.writeString(struct.dname);
        oprot.writeFieldEnd();
      }
      if (struct.did != null) {
        oprot.writeFieldBegin(DID_FIELD_DESC);
        oprot.writeString(struct.did);
        oprot.writeFieldEnd();
      }
      oprot.writeFieldBegin(LASTLOGIN_FIELD_DESC);
      oprot.writeI32(struct.lastlogin);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(CREATED_FIELD_DESC);
      oprot.writeI32(struct.created);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(CHIP_FIELD_DESC);
      oprot.writeI64(struct.chip);
      oprot.writeFieldEnd();
      oprot.writeFieldStop();
      oprot.writeStructEnd();
    }

  }

  private static class TLoginInfoTupleSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
    public TLoginInfoTupleScheme getScheme() {
      return new TLoginInfoTupleScheme();
    }
  }

  private static class TLoginInfoTupleScheme extends org.apache.thrift.scheme.TupleScheme<TLoginInfo> {

    @Override
    public void write(org.apache.thrift.protocol.TProtocol prot, TLoginInfo struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TTupleProtocol oprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
      java.util.BitSet optionals = new java.util.BitSet();
      if (struct.isSetUid()) {
        optionals.set(0);
      }
      if (struct.isSetUname()) {
        optionals.set(1);
      }
      if (struct.isSetDname()) {
        optionals.set(2);
      }
      if (struct.isSetDid()) {
        optionals.set(3);
      }
      if (struct.isSetLastlogin()) {
        optionals.set(4);
      }
      if (struct.isSetCreated()) {
        optionals.set(5);
      }
      if (struct.isSetChip()) {
        optionals.set(6);
      }
      oprot.writeBitSet(optionals, 7);
      if (struct.isSetUid()) {
        oprot.writeI64(struct.uid);
      }
      if (struct.isSetUname()) {
        oprot.writeString(struct.uname);
      }
      if (struct.isSetDname()) {
        oprot.writeString(struct.dname);
      }
      if (struct.isSetDid()) {
        oprot.writeString(struct.did);
      }
      if (struct.isSetLastlogin()) {
        oprot.writeI32(struct.lastlogin);
      }
      if (struct.isSetCreated()) {
        oprot.writeI32(struct.created);
      }
      if (struct.isSetChip()) {
        oprot.writeI64(struct.chip);
      }
    }

    @Override
    public void read(org.apache.thrift.protocol.TProtocol prot, TLoginInfo struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TTupleProtocol iprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
      java.util.BitSet incoming = iprot.readBitSet(7);
      if (incoming.get(0)) {
        struct.uid = iprot.readI64();
        struct.setUidIsSet(true);
      }
      if (incoming.get(1)) {
        struct.uname = iprot.readString();
        struct.setUnameIsSet(true);
      }
      if (incoming.get(2)) {
        struct.dname = iprot.readString();
        struct.setDnameIsSet(true);
      }
      if (incoming.get(3)) {
        struct.did = iprot.readString();
        struct.setDidIsSet(true);
      }
      if (incoming.get(4)) {
        struct.lastlogin = iprot.readI32();
        struct.setLastloginIsSet(true);
      }
      if (incoming.get(5)) {
        struct.created = iprot.readI32();
        struct.setCreatedIsSet(true);
      }
      if (incoming.get(6)) {
        struct.chip = iprot.readI64();
        struct.setChipIsSet(true);
      }
    }
  }

  private static <S extends org.apache.thrift.scheme.IScheme> S scheme(org.apache.thrift.protocol.TProtocol proto) {
    return (org.apache.thrift.scheme.StandardScheme.class.equals(proto.getScheme()) ? STANDARD_SCHEME_FACTORY : TUPLE_SCHEME_FACTORY).getScheme();
  }
}

